# Generated by Django 2.0.2 on 2020-05-07 15:37

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CentroCusto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.PositiveIntegerField(help_text='Código do Centro de custos do sistema para uso em demonstrações financeiras', unique=True, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('descricao', models.CharField(max_length=60)),
                ('ativo', models.BooleanField(default=True)),
                ('data_inclusao', models.DateField(auto_now_add=True, max_length=8)),
                ('habilitado', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='N para bloquear esta NATUREZA DE CUSTOS para uso no sistema em todos os módulos', max_length=1, verbose_name='Habilitado para uso')),
            ],
            options={
                'verbose_name': 'Centro de Custo',
                'verbose_name_plural': 'Centros de Custos',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='CodigosBancos',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(max_length=5, unique=True)),
                ('agencia', models.CharField(max_length=7, unique=True)),
                ('descricao', models.CharField(max_length=60)),
                ('email', models.CharField(max_length=50)),
                ('habilitado', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='N', help_text='Desabilite  este banco caso sua empresa não o utilize ou utilize muito esporadicamente  para evitar erros', max_length=1, verbose_name='Habilitado para uso')),
            ],
            options={
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='NaturezaCusto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.PositiveIntegerField(help_text='Codigo da natureza financeira do centro de custos - verbas destinadas aos centros de custos', unique=True, validators=[django.core.validators.MaxValueValidator(999999)])),
                ('descricao', models.CharField(max_length=60)),
                ('grau_conta', models.PositiveSmallIntegerField()),
                ('conta_superior', models.PositiveIntegerField(validators=[django.core.validators.MaxValueValidator(999999)])),
                ('receita_despesa', models.CharField(max_length=1)),
                ('data_inclusao', models.DateTimeField()),
                ('habilitado', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='N para bloquear esta NATUREZA DE CUSTOS financeiros para uso no sistema em todos os módulos', max_length=1, verbose_name='Habilitado para uso')),
            ],
            options={
                'verbose_name': 'Natureza de Custo',
                'verbose_name_plural': 'Naturezas de Custo',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='PrazoPagamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.PositiveIntegerField(unique=True, validators=[django.core.validators.MaxValueValidator(99999)])),
                ('descricao', models.CharField(max_length=60)),
            ],
            options={
                'verbose_name': 'Prazo de Pagamento',
                'verbose_name_plural': 'Prazos de Pagamentos',
                'ordering': ('codigo',),
            },
        ),
        migrations.CreateModel(
            name='TipoDocumento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(default='DIN', max_length=3, unique=True, verbose_name='Codigo tipo de documento')),
                ('descricao', models.CharField(help_text='Descrição tipo de documento para venda ou compra de produtos', max_length=60, unique=True, verbose_name='Descrição tipo de documento')),
                ('habilitado_vendas', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='N para bloquear esta forma de pagamento nas vendas, nas confirmações de pedidos de clientes', max_length=1, verbose_name='Habilitado em vendas')),
                ('habilitado_nfce', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='N para bloquear esta forma de pagamento nas vendas diretas no caixa em emissão de NFce', max_length=1, verbose_name='Habilitado para NFce/Cupom Fiscal')),
                ('habilitado_web', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='S para bloquear esta forma de pagamento nas vendas via TABLET, Vendedores externos Web', max_length=1, verbose_name='Habilitado para Vendas Web')),
                ('tipo_documento', models.CharField(choices=[('01', '01 = Dinheiro'), ('02', '02 = Cheque'), ('03', '03 = Cartão de Crédito'), ('04', '04 = Cartão de Débito"'), ('05', '05 = Crédito Loja)'), ('11', '11 = Vale Refeição'), ('12', '12 = Vale Presente'), ('13', '13 = Vale Combustível'), ('99', '99 = Outros')], default='S', help_text='Tipo de documento para NFCe Dinheiro/Cheque/Cartão/Etc', max_length=60, verbose_name='Tipo de documento para NFCe')),
                ('indicador_pagamento_nfe', models.CharField(choices=[('0', 'Pagamento `vista na NFe'), ('1', 'Pagamento a Prazo na Nfe'), ('2', 'Outros pagamentos na NFe')], default='0', help_text='Indicador da forma de pagamento para informação na nota fiscal eletrônica', max_length=1, verbose_name='Indicador da forma de pagamento')),
                ('natureza_custos', models.PositiveIntegerField(blank=True, default=1, null=True)),
                ('centro_custos', models.PositiveIntegerField(blank=True, default=1, null=True)),
            ],
            options={
                'verbose_name': 'Tipo de Documento',
                'verbose_name_plural': 'Tipos de Documentos',
                'ordering': ('descricao',),
            },
        ),
        migrations.CreateModel(
            name='TipoPagamento',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo', models.CharField(default='DIN', max_length=3, unique=True, verbose_name='Código Forma Pagamento')),
                ('descricao', models.CharField(default=' ', help_text='Descrição Forma Pagamento para venda ou compra de produtos', max_length=60, verbose_name='Descrição Forma Pagamento')),
                ('habilitado', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='S para bloquear esta forma de pagamento nas vendas', max_length=60, verbose_name='Tipo habilitado')),
                ('negociada', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='S para permitir que vendedor possa negociar a forma de pagamento com cliente N- Não negocia', max_length=60, verbose_name='Pode haver negociação')),
                ('venda_parcelada', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='S para permitir que vendedor possa parcelar venda N- Não parcela', max_length=60, verbose_name='Pode haver parcelamento')),
                ('imprime_na_nfe', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='S', help_text='S para permitir que sistema imprima os dados financeiros na nfe / Danfe', max_length=60, verbose_name='Imprimir dados na nota fiscal')),
                ('habilitado_web', models.CharField(choices=[('S', 'Sim'), ('N', 'Não')], default='N', help_text='S Habilita forma de pagamento na vendas via site WEB', max_length=60, verbose_name='Habilita forma de pagamento na WEB')),
                ('num_parcelas', models.PositiveIntegerField(help_text='Numero máximo de parcelas pre determinado para este pagamento. Se zeros, força que seja a vista', validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Numero de parcelas')),
                ('prazos_padroes', models.CharField(default='000', help_text='Informe os prazos padroes em numero de dias consecutivos de 3 em 3 ex 000030060090', max_length=60, verbose_name='Prazos padroes em dias')),
                ('prazo_maximo', models.PositiveIntegerField(help_text='Número máximo de prazo em dias pre determinado para este pagamento', validators=[django.core.validators.MaxValueValidator(999)], verbose_name='Prazo máximo em dias')),
                ('valor_minimo', models.DecimalField(decimal_places=2, default=0.0, help_text='Valor mínimo para este tipo de pagamento reverse', max_digits=16, max_length=16, verbose_name='Valor mínimo para venda')),
                ('valor_maximo', models.DecimalField(decimal_places=2, default=0.0, help_text='Valor máximo para este tipo de pagamento reverse', max_digits=16, max_length=16, verbose_name='Valor máximo para venda')),
                ('tipo_documento', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='financeiro.TipoDocumento')),
            ],
            options={
                'verbose_name': 'Tipo de Pagamento',
                'verbose_name_plural': 'Tipos de Pagamentos',
                'ordering': ('descricao',),
            },
        ),
    ]
